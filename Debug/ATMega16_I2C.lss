
ATMega16_I2C.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000a58  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000008  00800060  00000a58  00000aec  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000001  00800068  00800068  00000af4  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00000af4  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00000b24  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000088  00000000  00000000  00000b60  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000b2b  00000000  00000000  00000be8  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000704  00000000  00000000  00001713  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000515  00000000  00000000  00001e17  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000110  00000000  00000000  0000232c  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000003f6  00000000  00000000  0000243c  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000003bf  00000000  00000000  00002832  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000078  00000000  00000000  00002bf1  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 6b 00 	jmp	0xd6	; 0xd6 <__ctors_end>
   4:	0c 94 88 00 	jmp	0x110	; 0x110 <__bad_interrupt>
   8:	0c 94 88 00 	jmp	0x110	; 0x110 <__bad_interrupt>
   c:	0c 94 88 00 	jmp	0x110	; 0x110 <__bad_interrupt>
  10:	0c 94 88 00 	jmp	0x110	; 0x110 <__bad_interrupt>
  14:	0c 94 88 00 	jmp	0x110	; 0x110 <__bad_interrupt>
  18:	0c 94 88 00 	jmp	0x110	; 0x110 <__bad_interrupt>
  1c:	0c 94 88 00 	jmp	0x110	; 0x110 <__bad_interrupt>
  20:	0c 94 88 00 	jmp	0x110	; 0x110 <__bad_interrupt>
  24:	0c 94 88 00 	jmp	0x110	; 0x110 <__bad_interrupt>
  28:	0c 94 88 00 	jmp	0x110	; 0x110 <__bad_interrupt>
  2c:	0c 94 88 00 	jmp	0x110	; 0x110 <__bad_interrupt>
  30:	0c 94 88 00 	jmp	0x110	; 0x110 <__bad_interrupt>
  34:	0c 94 88 00 	jmp	0x110	; 0x110 <__bad_interrupt>
  38:	0c 94 88 00 	jmp	0x110	; 0x110 <__bad_interrupt>
  3c:	0c 94 88 00 	jmp	0x110	; 0x110 <__bad_interrupt>
  40:	0c 94 88 00 	jmp	0x110	; 0x110 <__bad_interrupt>
  44:	0c 94 88 00 	jmp	0x110	; 0x110 <__bad_interrupt>
  48:	0c 94 88 00 	jmp	0x110	; 0x110 <__bad_interrupt>
  4c:	0c 94 88 00 	jmp	0x110	; 0x110 <__bad_interrupt>
  50:	0c 94 88 00 	jmp	0x110	; 0x110 <__bad_interrupt>
  54:	07 63       	ori	r16, 0x37	; 55
  56:	42 36       	cpi	r20, 0x62	; 98
  58:	b7 9b       	sbis	0x16, 7	; 22
  5a:	d8 a7       	std	Y+40, r29	; 0x28
  5c:	1a 39       	cpi	r17, 0x9A	; 154
  5e:	68 56       	subi	r22, 0x68	; 104
  60:	18 ae       	std	Y+56, r1	; 0x38
  62:	ba ab       	std	Y+50, r27	; 0x32
  64:	55 8c       	ldd	r5, Z+29	; 0x1d
  66:	1d 3c       	cpi	r17, 0xCD	; 205
  68:	b7 cc       	rjmp	.-1682   	; 0xfffff9d8 <__eeprom_end+0xff7ef9d8>
  6a:	57 63       	ori	r21, 0x37	; 55
  6c:	bd 6d       	ori	r27, 0xDD	; 221
  6e:	ed fd       	.word	0xfded	; ????
  70:	75 3e       	cpi	r23, 0xE5	; 229
  72:	f6 17       	cp	r31, r22
  74:	72 31       	cpi	r23, 0x12	; 18
  76:	bf 00       	.word	0x00bf	; ????
  78:	00 00       	nop
  7a:	80 3f       	cpi	r24, 0xF0	; 240
  7c:	08 00       	.word	0x0008	; ????
  7e:	00 00       	nop
  80:	be 92       	st	-X, r11
  82:	24 49       	sbci	r18, 0x94	; 148
  84:	12 3e       	cpi	r17, 0xE2	; 226
  86:	ab aa       	std	Y+51, r10	; 0x33
  88:	aa 2a       	or	r10, r26
  8a:	be cd       	rjmp	.-1156   	; 0xfffffc08 <__eeprom_end+0xff7efc08>
  8c:	cc cc       	rjmp	.-1640   	; 0xfffffa26 <__eeprom_end+0xff7efa26>
  8e:	4c 3e       	cpi	r20, 0xEC	; 236
  90:	00 00       	nop
  92:	00 80       	ld	r0, Z
  94:	be ab       	std	Y+54, r27	; 0x36
  96:	aa aa       	std	Y+50, r10	; 0x32
  98:	aa 3e       	cpi	r26, 0xEA	; 234
  9a:	00 00       	nop
  9c:	00 00       	nop
  9e:	bf 00       	.word	0x00bf	; ????
  a0:	00 00       	nop
  a2:	80 3f       	cpi	r24, 0xF0	; 240
  a4:	00 00       	nop
  a6:	00 00       	nop
  a8:	00 08       	sbc	r0, r0
  aa:	41 78       	andi	r20, 0x81	; 129
  ac:	d3 bb       	out	0x13, r29	; 19
  ae:	43 87       	std	Z+11, r20	; 0x0b
  b0:	d1 13       	cpse	r29, r17
  b2:	3d 19       	sub	r19, r13
  b4:	0e 3c       	cpi	r16, 0xCE	; 206
  b6:	c3 bd       	out	0x23, r28	; 35
  b8:	42 82       	std	Z+2, r4	; 0x02
  ba:	ad 2b       	or	r26, r29
  bc:	3e 68       	ori	r19, 0x8E	; 142
  be:	ec 82       	std	Y+4, r14	; 0x04
  c0:	76 be       	out	0x36, r7	; 54
  c2:	d9 8f       	std	Y+25, r29	; 0x19
  c4:	e1 a9       	ldd	r30, Z+49	; 0x31
  c6:	3e 4c       	sbci	r19, 0xCE	; 206
  c8:	80 ef       	ldi	r24, 0xF0	; 240
  ca:	ff be       	out	0x3f, r15	; 63
  cc:	01 c4       	rjmp	.+2050   	; 0x8d0 <log+0x6a>
  ce:	ff 7f       	andi	r31, 0xFF	; 255
  d0:	3f 00       	.word	0x003f	; ????
  d2:	00 00       	nop
	...

000000d6 <__ctors_end>:
  d6:	11 24       	eor	r1, r1
  d8:	1f be       	out	0x3f, r1	; 63
  da:	cf e5       	ldi	r28, 0x5F	; 95
  dc:	d4 e0       	ldi	r29, 0x04	; 4
  de:	de bf       	out	0x3e, r29	; 62
  e0:	cd bf       	out	0x3d, r28	; 61

000000e2 <__do_copy_data>:
  e2:	10 e0       	ldi	r17, 0x00	; 0
  e4:	a0 e6       	ldi	r26, 0x60	; 96
  e6:	b0 e0       	ldi	r27, 0x00	; 0
  e8:	e8 e5       	ldi	r30, 0x58	; 88
  ea:	fa e0       	ldi	r31, 0x0A	; 10
  ec:	02 c0       	rjmp	.+4      	; 0xf2 <__do_copy_data+0x10>
  ee:	05 90       	lpm	r0, Z+
  f0:	0d 92       	st	X+, r0
  f2:	a8 36       	cpi	r26, 0x68	; 104
  f4:	b1 07       	cpc	r27, r17
  f6:	d9 f7       	brne	.-10     	; 0xee <__do_copy_data+0xc>

000000f8 <__do_clear_bss>:
  f8:	20 e0       	ldi	r18, 0x00	; 0
  fa:	a8 e6       	ldi	r26, 0x68	; 104
  fc:	b0 e0       	ldi	r27, 0x00	; 0
  fe:	01 c0       	rjmp	.+2      	; 0x102 <.do_clear_bss_start>

00000100 <.do_clear_bss_loop>:
 100:	1d 92       	st	X+, r1

00000102 <.do_clear_bss_start>:
 102:	a9 36       	cpi	r26, 0x69	; 105
 104:	b2 07       	cpc	r27, r18
 106:	e1 f7       	brne	.-8      	; 0x100 <.do_clear_bss_loop>
 108:	0e 94 58 01 	call	0x2b0	; 0x2b0 <main>
 10c:	0c 94 2a 05 	jmp	0xa54	; 0xa54 <_exit>

00000110 <__bad_interrupt>:
 110:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000114 <decimal_to_bcd>:
	
	//Wait for TWINT Flag set. This indicates that the DATA has been transmitted, and NACK has been received.
	
	while((!TWCR & (1<<TWINT)));						//Wait until TWI finish its current job (Write Operation)
	return TWDR;
}
 114:	9d ec       	ldi	r25, 0xCD	; 205
 116:	89 9f       	mul	r24, r25
 118:	91 2d       	mov	r25, r1
 11a:	11 24       	eor	r1, r1
 11c:	96 95       	lsr	r25
 11e:	96 95       	lsr	r25
 120:	96 95       	lsr	r25
 122:	20 e1       	ldi	r18, 0x10	; 16
 124:	92 9f       	mul	r25, r18
 126:	a0 01       	movw	r20, r0
 128:	11 24       	eor	r1, r1
 12a:	99 0f       	add	r25, r25
 12c:	29 2f       	mov	r18, r25
 12e:	22 0f       	add	r18, r18
 130:	22 0f       	add	r18, r18
 132:	92 0f       	add	r25, r18
 134:	89 1b       	sub	r24, r25
 136:	84 2b       	or	r24, r20
 138:	08 95       	ret

0000013a <i2c_Init>:
 13a:	11 b8       	out	0x01, r1	; 1
 13c:	61 b1       	in	r22, 0x01	; 1
 13e:	61 70       	andi	r22, 0x01	; 1
 140:	62 60       	ori	r22, 0x02	; 2
 142:	70 e0       	ldi	r23, 0x00	; 0
 144:	80 e0       	ldi	r24, 0x00	; 0
 146:	90 e0       	ldi	r25, 0x00	; 0
 148:	0e 94 ac 02 	call	0x558	; 0x558 <__floatsisf>
 14c:	9b 01       	movw	r18, r22
 14e:	ac 01       	movw	r20, r24
 150:	60 e0       	ldi	r22, 0x00	; 0
 152:	70 e0       	ldi	r23, 0x00	; 0
 154:	80 e8       	ldi	r24, 0x80	; 128
 156:	90 e4       	ldi	r25, 0x40	; 64
 158:	0e 94 38 03 	call	0x670	; 0x670 <pow>
 15c:	9b 01       	movw	r18, r22
 15e:	ac 01       	movw	r20, r24
 160:	0e 94 9d 01 	call	0x33a	; 0x33a <__addsf3>
 164:	9b 01       	movw	r18, r22
 166:	ac 01       	movw	r20, r24
 168:	60 e0       	ldi	r22, 0x00	; 0
 16a:	70 e0       	ldi	r23, 0x00	; 0
 16c:	80 e8       	ldi	r24, 0x80	; 128
 16e:	92 e4       	ldi	r25, 0x42	; 66
 170:	0e 94 09 02 	call	0x412	; 0x412 <__divsf3>
 174:	0e 94 7b 02 	call	0x4f6	; 0x4f6 <__fixunssfsi>
 178:	60 b9       	out	0x00, r22	; 0
 17a:	08 95       	ret

0000017c <i2c_Start>:
 17c:	94 ea       	ldi	r25, 0xA4	; 164
 17e:	96 bf       	out	0x36, r25	; 54
 180:	06 b6       	in	r0, 0x36	; 54
 182:	07 fe       	sbrs	r0, 7
 184:	fd cf       	rjmp	.-6      	; 0x180 <i2c_Start+0x4>
 186:	83 b9       	out	0x03, r24	; 3
 188:	84 e8       	ldi	r24, 0x84	; 132
 18a:	86 bf       	out	0x36, r24	; 54
 18c:	06 b6       	in	r0, 0x36	; 54
 18e:	07 fe       	sbrs	r0, 7
 190:	fd cf       	rjmp	.-6      	; 0x18c <i2c_Start+0x10>
 192:	08 95       	ret

00000194 <i2c_RepeatedStart>:
 194:	94 ea       	ldi	r25, 0xA4	; 164
 196:	96 bf       	out	0x36, r25	; 54
 198:	06 b6       	in	r0, 0x36	; 54
 19a:	07 fe       	sbrs	r0, 7
 19c:	fd cf       	rjmp	.-6      	; 0x198 <i2c_RepeatedStart+0x4>
 19e:	83 b9       	out	0x03, r24	; 3
 1a0:	84 e8       	ldi	r24, 0x84	; 132
 1a2:	86 bf       	out	0x36, r24	; 54
 1a4:	06 b6       	in	r0, 0x36	; 54
 1a6:	07 fe       	sbrs	r0, 7
 1a8:	fd cf       	rjmp	.-6      	; 0x1a4 <i2c_RepeatedStart+0x10>
 1aa:	08 95       	ret

000001ac <i2c_Stop>:
 1ac:	84 e9       	ldi	r24, 0x94	; 148
 1ae:	86 bf       	out	0x36, r24	; 54
 1b0:	86 b7       	in	r24, 0x36	; 54
 1b2:	08 95       	ret

000001b4 <i2c_Write>:
 1b4:	0e 94 8a 00 	call	0x114	; 0x114 <decimal_to_bcd>
 1b8:	83 b9       	out	0x03, r24	; 3
 1ba:	84 e8       	ldi	r24, 0x84	; 132
 1bc:	86 bf       	out	0x36, r24	; 54
 1be:	06 b6       	in	r0, 0x36	; 54
 1c0:	07 fe       	sbrs	r0, 7
 1c2:	fd cf       	rjmp	.-6      	; 0x1be <i2c_Write+0xa>
 1c4:	08 95       	ret

000001c6 <i2c_ReadAck>:
 1c6:	84 ec       	ldi	r24, 0xC4	; 196
 1c8:	86 bf       	out	0x36, r24	; 54
 1ca:	86 b7       	in	r24, 0x36	; 54
 1cc:	83 b1       	in	r24, 0x03	; 3
 1ce:	08 95       	ret

000001d0 <lcd_cmd>:

//LCD*********************************************************LCD*********

void lcd_cmd(unsigned char c)
{
	lcd=((c&0xF0) + 0x04);
 1d0:	98 2f       	mov	r25, r24
 1d2:	90 7f       	andi	r25, 0xF0	; 240
 1d4:	9c 5f       	subi	r25, 0xFC	; 252
 1d6:	9b bb       	out	0x1b, r25	; 27
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 1d8:	ef ec       	ldi	r30, 0xCF	; 207
 1da:	f7 e0       	ldi	r31, 0x07	; 7
 1dc:	31 97       	sbiw	r30, 0x01	; 1
 1de:	f1 f7       	brne	.-4      	; 0x1dc <lcd_cmd+0xc>
 1e0:	00 c0       	rjmp	.+0      	; 0x1e2 <lcd_cmd+0x12>
 1e2:	00 00       	nop
	_delay_ms(1);
	lcd=lcd-0x04;
 1e4:	9b b3       	in	r25, 0x1b	; 27
 1e6:	94 50       	subi	r25, 0x04	; 4
 1e8:	9b bb       	out	0x1b, r25	; 27
	lcd=((c<<4)& 0xF0) +0x04;
 1ea:	f0 e1       	ldi	r31, 0x10	; 16
 1ec:	8f 9f       	mul	r24, r31
 1ee:	c0 01       	movw	r24, r0
 1f0:	11 24       	eor	r1, r1
 1f2:	8c 5f       	subi	r24, 0xFC	; 252
 1f4:	8b bb       	out	0x1b, r24	; 27
 1f6:	8f ec       	ldi	r24, 0xCF	; 207
 1f8:	97 e0       	ldi	r25, 0x07	; 7
 1fa:	01 97       	sbiw	r24, 0x01	; 1
 1fc:	f1 f7       	brne	.-4      	; 0x1fa <lcd_cmd+0x2a>
 1fe:	00 c0       	rjmp	.+0      	; 0x200 <__EEPROM_REGION_LENGTH__>
 200:	00 00       	nop
	_delay_ms(1);
	lcd=lcd-0x04;
 202:	8b b3       	in	r24, 0x1b	; 27
 204:	84 50       	subi	r24, 0x04	; 4
 206:	8b bb       	out	0x1b, r24	; 27
 208:	08 95       	ret

0000020a <lcd_Init>:
}

void lcd_Init()
{
	lcd_cmd(0x02); //to set the home position
 20a:	82 e0       	ldi	r24, 0x02	; 2
 20c:	0e 94 e8 00 	call	0x1d0	; 0x1d0 <lcd_cmd>
	lcd_cmd(0x28); // 4bit mode, 0x38 8 bit mode
 210:	88 e2       	ldi	r24, 0x28	; 40
 212:	0e 94 e8 00 	call	0x1d0	; 0x1d0 <lcd_cmd>
	lcd_cmd(0x06); // increment
 216:	86 e0       	ldi	r24, 0x06	; 6
 218:	0e 94 e8 00 	call	0x1d0	; 0x1d0 <lcd_cmd>
	lcd_cmd(0x01); //clear lcd
 21c:	81 e0       	ldi	r24, 0x01	; 1
 21e:	0e 94 e8 00 	call	0x1d0	; 0x1d0 <lcd_cmd>
	lcd_cmd(0x0C); // set cursor OFF
 222:	8c e0       	ldi	r24, 0x0C	; 12
 224:	0e 94 e8 00 	call	0x1d0	; 0x1d0 <lcd_cmd>
 228:	08 95       	ret

0000022a <lcd_data>:
}

void lcd_data(unsigned char d)
{
	lcd=((d&0xF0) + 0x05);
 22a:	98 2f       	mov	r25, r24
 22c:	90 7f       	andi	r25, 0xF0	; 240
 22e:	9b 5f       	subi	r25, 0xFB	; 251
 230:	9b bb       	out	0x1b, r25	; 27
 232:	ef ec       	ldi	r30, 0xCF	; 207
 234:	f7 e0       	ldi	r31, 0x07	; 7
 236:	31 97       	sbiw	r30, 0x01	; 1
 238:	f1 f7       	brne	.-4      	; 0x236 <lcd_data+0xc>
 23a:	00 c0       	rjmp	.+0      	; 0x23c <lcd_data+0x12>
 23c:	00 00       	nop
	_delay_ms(1);
	lcd=lcd-0x04;
 23e:	9b b3       	in	r25, 0x1b	; 27
 240:	94 50       	subi	r25, 0x04	; 4
 242:	9b bb       	out	0x1b, r25	; 27
	lcd=((d<<4) & 0xF0) + 0x05;
 244:	f0 e1       	ldi	r31, 0x10	; 16
 246:	8f 9f       	mul	r24, r31
 248:	c0 01       	movw	r24, r0
 24a:	11 24       	eor	r1, r1
 24c:	8b 5f       	subi	r24, 0xFB	; 251
 24e:	8b bb       	out	0x1b, r24	; 27
 250:	8f ec       	ldi	r24, 0xCF	; 207
 252:	97 e0       	ldi	r25, 0x07	; 7
 254:	01 97       	sbiw	r24, 0x01	; 1
 256:	f1 f7       	brne	.-4      	; 0x254 <lcd_data+0x2a>
 258:	00 c0       	rjmp	.+0      	; 0x25a <lcd_data+0x30>
 25a:	00 00       	nop
	_delay_ms(1);
	lcd=lcd-0x04;
 25c:	8b b3       	in	r24, 0x1b	; 27
 25e:	84 50       	subi	r24, 0x04	; 4
 260:	8b bb       	out	0x1b, r24	; 27
 262:	08 95       	ret

00000264 <hex_to_ASCII>:
{
	return (((value/10)<<4) | (value%10));
}

void hex_to_ASCII(unsigned char value)
{
 264:	cf 93       	push	r28
 266:	c8 2f       	mov	r28, r24
	unsigned char bcd;
	bcd = value;
	bcd = bcd & 0xf0;
	bcd = bcd >> 4;
 268:	82 95       	swap	r24
 26a:	8f 70       	andi	r24, 0x0F	; 15
	bcd = bcd | 0x30;
 26c:	80 63       	ori	r24, 0x30	; 48
	
	lcd_data(bcd);
 26e:	90 e0       	ldi	r25, 0x00	; 0
 270:	0e 94 15 01 	call	0x22a	; 0x22a <lcd_data>
	
	bcd = value;
	bcd = bcd & 0x0f;
 274:	cf 70       	andi	r28, 0x0F	; 15
	bcd = bcd | 0x30;
 276:	8c 2f       	mov	r24, r28
 278:	80 63       	ori	r24, 0x30	; 48
	
	lcd_data(bcd);
 27a:	90 e0       	ldi	r25, 0x00	; 0
 27c:	0e 94 15 01 	call	0x22a	; 0x22a <lcd_data>
	
}
 280:	cf 91       	pop	r28
 282:	08 95       	ret

00000284 <lcd_str>:
	_delay_ms(1);
	lcd=lcd-0x04;
}

void lcd_str(char namo[])
{
 284:	0f 93       	push	r16
 286:	1f 93       	push	r17
 288:	cf 93       	push	r28
 28a:	df 93       	push	r29
 28c:	8c 01       	movw	r16, r24
	int i=0;
 28e:	c0 e0       	ldi	r28, 0x00	; 0
 290:	d0 e0       	ldi	r29, 0x00	; 0
	while(namo[i]!='\0')
 292:	03 c0       	rjmp	.+6      	; 0x29a <lcd_str+0x16>
	{
		lcd_data(namo[i]);
 294:	0e 94 15 01 	call	0x22a	; 0x22a <lcd_data>
		i++;
 298:	21 96       	adiw	r28, 0x01	; 1
}

void lcd_str(char namo[])
{
	int i=0;
	while(namo[i]!='\0')
 29a:	f8 01       	movw	r30, r16
 29c:	ec 0f       	add	r30, r28
 29e:	fd 1f       	adc	r31, r29
 2a0:	80 81       	ld	r24, Z
 2a2:	81 11       	cpse	r24, r1
 2a4:	f7 cf       	rjmp	.-18     	; 0x294 <lcd_str+0x10>
	{
		lcd_data(namo[i]);
		i++;
	}
}
 2a6:	df 91       	pop	r29
 2a8:	cf 91       	pop	r28
 2aa:	1f 91       	pop	r17
 2ac:	0f 91       	pop	r16
 2ae:	08 95       	ret

000002b0 <main>:

uint8_t data=0;

int main(void)
{
    sei();
 2b0:	78 94       	sei
	DDRA = 0xFF;			//PORTA as output.
 2b2:	8f ef       	ldi	r24, 0xFF	; 255
 2b4:	8a bb       	out	0x1a, r24	; 26
	
	//DDRB |= (1<<DDB0) | (1<<DDB1) | (1<<DDB2);
	DDRC = 0x00;
 2b6:	14 ba       	out	0x14, r1	; 20
	PORTC = 0xFF;
 2b8:	85 bb       	out	0x15, r24	; 21
	
	lcd_Init();
 2ba:	0e 94 05 01 	call	0x20a	; 0x20a <lcd_Init>
	lcd_cmd(0x80);
 2be:	80 e8       	ldi	r24, 0x80	; 128
 2c0:	0e 94 e8 00 	call	0x1d0	; 0x1d0 <lcd_cmd>
	lcd_str("ASHISH");
 2c4:	80 e6       	ldi	r24, 0x60	; 96
 2c6:	90 e0       	ldi	r25, 0x00	; 0
 2c8:	0e 94 42 01 	call	0x284	; 0x284 <lcd_str>
	lcd_cmd(0xC0);			//Start at 2nd line. 
 2cc:	80 ec       	ldi	r24, 0xC0	; 192
 2ce:	0e 94 e8 00 	call	0x1d0	; 0x1d0 <lcd_cmd>
	
	i2c_Init();
 2d2:	0e 94 9d 00 	call	0x13a	; 0x13a <i2c_Init>
	i2c_Start(0xA0);
 2d6:	80 ea       	ldi	r24, 0xA0	; 160
 2d8:	0e 94 be 00 	call	0x17c	; 0x17c <i2c_Start>
	i2c_Write(32);
 2dc:	80 e2       	ldi	r24, 0x20	; 32
 2de:	0e 94 da 00 	call	0x1b4	; 0x1b4 <i2c_Write>
	i2c_Write(45);
 2e2:	8d e2       	ldi	r24, 0x2D	; 45
 2e4:	0e 94 da 00 	call	0x1b4	; 0x1b4 <i2c_Write>
	i2c_Write(98);
 2e8:	82 e6       	ldi	r24, 0x62	; 98
 2ea:	0e 94 da 00 	call	0x1b4	; 0x1b4 <i2c_Write>
	i2c_Stop();
 2ee:	0e 94 d6 00 	call	0x1ac	; 0x1ac <i2c_Stop>
 2f2:	2f ef       	ldi	r18, 0xFF	; 255
 2f4:	89 e6       	ldi	r24, 0x69	; 105
 2f6:	98 e1       	ldi	r25, 0x18	; 24
 2f8:	21 50       	subi	r18, 0x01	; 1
 2fa:	80 40       	sbci	r24, 0x00	; 0
 2fc:	90 40       	sbci	r25, 0x00	; 0
 2fe:	e1 f7       	brne	.-8      	; 0x2f8 <main+0x48>
 300:	00 c0       	rjmp	.+0      	; 0x302 <main+0x52>
 302:	00 00       	nop
	_delay_ms(1000);
	
	i2c_Start(0xA0);
 304:	80 ea       	ldi	r24, 0xA0	; 160
 306:	0e 94 be 00 	call	0x17c	; 0x17c <i2c_Start>
	i2c_Write(32);
 30a:	80 e2       	ldi	r24, 0x20	; 32
 30c:	0e 94 da 00 	call	0x1b4	; 0x1b4 <i2c_Write>
	i2c_Write(45);
 310:	8d e2       	ldi	r24, 0x2D	; 45
 312:	0e 94 da 00 	call	0x1b4	; 0x1b4 <i2c_Write>
	i2c_RepeatedStart(0xA1);
 316:	81 ea       	ldi	r24, 0xA1	; 161
 318:	0e 94 ca 00 	call	0x194	; 0x194 <i2c_RepeatedStart>
	data = i2c_ReadAck();
 31c:	0e 94 e3 00 	call	0x1c6	; 0x1c6 <i2c_ReadAck>
 320:	80 93 68 00 	sts	0x0068, r24	; 0x800068 <__data_end>
	i2c_Stop();
 324:	0e 94 d6 00 	call	0x1ac	; 0x1ac <i2c_Stop>
	
	lcd_cmd(0xC0);
 328:	80 ec       	ldi	r24, 0xC0	; 192
 32a:	0e 94 e8 00 	call	0x1d0	; 0x1d0 <lcd_cmd>
	hex_to_ASCII(data);
 32e:	80 91 68 00 	lds	r24, 0x0068	; 0x800068 <__data_end>
 332:	0e 94 32 01 	call	0x264	; 0x264 <hex_to_ASCII>
 336:	ff cf       	rjmp	.-2      	; 0x336 <main+0x86>

00000338 <__subsf3>:
 338:	50 58       	subi	r21, 0x80	; 128

0000033a <__addsf3>:
 33a:	bb 27       	eor	r27, r27
 33c:	aa 27       	eor	r26, r26
 33e:	0e 94 b4 01 	call	0x368	; 0x368 <__addsf3x>
 342:	0c 94 fe 02 	jmp	0x5fc	; 0x5fc <__fp_round>
 346:	0e 94 f0 02 	call	0x5e0	; 0x5e0 <__fp_pscA>
 34a:	38 f0       	brcs	.+14     	; 0x35a <__addsf3+0x20>
 34c:	0e 94 f7 02 	call	0x5ee	; 0x5ee <__fp_pscB>
 350:	20 f0       	brcs	.+8      	; 0x35a <__addsf3+0x20>
 352:	39 f4       	brne	.+14     	; 0x362 <__addsf3+0x28>
 354:	9f 3f       	cpi	r25, 0xFF	; 255
 356:	19 f4       	brne	.+6      	; 0x35e <__addsf3+0x24>
 358:	26 f4       	brtc	.+8      	; 0x362 <__addsf3+0x28>
 35a:	0c 94 ed 02 	jmp	0x5da	; 0x5da <__fp_nan>
 35e:	0e f4       	brtc	.+2      	; 0x362 <__addsf3+0x28>
 360:	e0 95       	com	r30
 362:	e7 fb       	bst	r30, 7
 364:	0c 94 e7 02 	jmp	0x5ce	; 0x5ce <__fp_inf>

00000368 <__addsf3x>:
 368:	e9 2f       	mov	r30, r25
 36a:	0e 94 0f 03 	call	0x61e	; 0x61e <__fp_split3>
 36e:	58 f3       	brcs	.-42     	; 0x346 <__addsf3+0xc>
 370:	ba 17       	cp	r27, r26
 372:	62 07       	cpc	r22, r18
 374:	73 07       	cpc	r23, r19
 376:	84 07       	cpc	r24, r20
 378:	95 07       	cpc	r25, r21
 37a:	20 f0       	brcs	.+8      	; 0x384 <__addsf3x+0x1c>
 37c:	79 f4       	brne	.+30     	; 0x39c <__addsf3x+0x34>
 37e:	a6 f5       	brtc	.+104    	; 0x3e8 <__addsf3x+0x80>
 380:	0c 94 31 03 	jmp	0x662	; 0x662 <__fp_zero>
 384:	0e f4       	brtc	.+2      	; 0x388 <__addsf3x+0x20>
 386:	e0 95       	com	r30
 388:	0b 2e       	mov	r0, r27
 38a:	ba 2f       	mov	r27, r26
 38c:	a0 2d       	mov	r26, r0
 38e:	0b 01       	movw	r0, r22
 390:	b9 01       	movw	r22, r18
 392:	90 01       	movw	r18, r0
 394:	0c 01       	movw	r0, r24
 396:	ca 01       	movw	r24, r20
 398:	a0 01       	movw	r20, r0
 39a:	11 24       	eor	r1, r1
 39c:	ff 27       	eor	r31, r31
 39e:	59 1b       	sub	r21, r25
 3a0:	99 f0       	breq	.+38     	; 0x3c8 <__addsf3x+0x60>
 3a2:	59 3f       	cpi	r21, 0xF9	; 249
 3a4:	50 f4       	brcc	.+20     	; 0x3ba <__addsf3x+0x52>
 3a6:	50 3e       	cpi	r21, 0xE0	; 224
 3a8:	68 f1       	brcs	.+90     	; 0x404 <__DATA_REGION_LENGTH__+0x4>
 3aa:	1a 16       	cp	r1, r26
 3ac:	f0 40       	sbci	r31, 0x00	; 0
 3ae:	a2 2f       	mov	r26, r18
 3b0:	23 2f       	mov	r18, r19
 3b2:	34 2f       	mov	r19, r20
 3b4:	44 27       	eor	r20, r20
 3b6:	58 5f       	subi	r21, 0xF8	; 248
 3b8:	f3 cf       	rjmp	.-26     	; 0x3a0 <__addsf3x+0x38>
 3ba:	46 95       	lsr	r20
 3bc:	37 95       	ror	r19
 3be:	27 95       	ror	r18
 3c0:	a7 95       	ror	r26
 3c2:	f0 40       	sbci	r31, 0x00	; 0
 3c4:	53 95       	inc	r21
 3c6:	c9 f7       	brne	.-14     	; 0x3ba <__addsf3x+0x52>
 3c8:	7e f4       	brtc	.+30     	; 0x3e8 <__addsf3x+0x80>
 3ca:	1f 16       	cp	r1, r31
 3cc:	ba 0b       	sbc	r27, r26
 3ce:	62 0b       	sbc	r22, r18
 3d0:	73 0b       	sbc	r23, r19
 3d2:	84 0b       	sbc	r24, r20
 3d4:	ba f0       	brmi	.+46     	; 0x404 <__DATA_REGION_LENGTH__+0x4>
 3d6:	91 50       	subi	r25, 0x01	; 1
 3d8:	a1 f0       	breq	.+40     	; 0x402 <__DATA_REGION_LENGTH__+0x2>
 3da:	ff 0f       	add	r31, r31
 3dc:	bb 1f       	adc	r27, r27
 3de:	66 1f       	adc	r22, r22
 3e0:	77 1f       	adc	r23, r23
 3e2:	88 1f       	adc	r24, r24
 3e4:	c2 f7       	brpl	.-16     	; 0x3d6 <__addsf3x+0x6e>
 3e6:	0e c0       	rjmp	.+28     	; 0x404 <__DATA_REGION_LENGTH__+0x4>
 3e8:	ba 0f       	add	r27, r26
 3ea:	62 1f       	adc	r22, r18
 3ec:	73 1f       	adc	r23, r19
 3ee:	84 1f       	adc	r24, r20
 3f0:	48 f4       	brcc	.+18     	; 0x404 <__DATA_REGION_LENGTH__+0x4>
 3f2:	87 95       	ror	r24
 3f4:	77 95       	ror	r23
 3f6:	67 95       	ror	r22
 3f8:	b7 95       	ror	r27
 3fa:	f7 95       	ror	r31
 3fc:	9e 3f       	cpi	r25, 0xFE	; 254
 3fe:	08 f0       	brcs	.+2      	; 0x402 <__DATA_REGION_LENGTH__+0x2>
 400:	b0 cf       	rjmp	.-160    	; 0x362 <__addsf3+0x28>
 402:	93 95       	inc	r25
 404:	88 0f       	add	r24, r24
 406:	08 f0       	brcs	.+2      	; 0x40a <__DATA_REGION_LENGTH__+0xa>
 408:	99 27       	eor	r25, r25
 40a:	ee 0f       	add	r30, r30
 40c:	97 95       	ror	r25
 40e:	87 95       	ror	r24
 410:	08 95       	ret

00000412 <__divsf3>:
 412:	0e 94 1d 02 	call	0x43a	; 0x43a <__divsf3x>
 416:	0c 94 fe 02 	jmp	0x5fc	; 0x5fc <__fp_round>
 41a:	0e 94 f7 02 	call	0x5ee	; 0x5ee <__fp_pscB>
 41e:	58 f0       	brcs	.+22     	; 0x436 <__divsf3+0x24>
 420:	0e 94 f0 02 	call	0x5e0	; 0x5e0 <__fp_pscA>
 424:	40 f0       	brcs	.+16     	; 0x436 <__divsf3+0x24>
 426:	29 f4       	brne	.+10     	; 0x432 <__divsf3+0x20>
 428:	5f 3f       	cpi	r21, 0xFF	; 255
 42a:	29 f0       	breq	.+10     	; 0x436 <__divsf3+0x24>
 42c:	0c 94 e7 02 	jmp	0x5ce	; 0x5ce <__fp_inf>
 430:	51 11       	cpse	r21, r1
 432:	0c 94 32 03 	jmp	0x664	; 0x664 <__fp_szero>
 436:	0c 94 ed 02 	jmp	0x5da	; 0x5da <__fp_nan>

0000043a <__divsf3x>:
 43a:	0e 94 0f 03 	call	0x61e	; 0x61e <__fp_split3>
 43e:	68 f3       	brcs	.-38     	; 0x41a <__divsf3+0x8>

00000440 <__divsf3_pse>:
 440:	99 23       	and	r25, r25
 442:	b1 f3       	breq	.-20     	; 0x430 <__divsf3+0x1e>
 444:	55 23       	and	r21, r21
 446:	91 f3       	breq	.-28     	; 0x42c <__divsf3+0x1a>
 448:	95 1b       	sub	r25, r21
 44a:	55 0b       	sbc	r21, r21
 44c:	bb 27       	eor	r27, r27
 44e:	aa 27       	eor	r26, r26
 450:	62 17       	cp	r22, r18
 452:	73 07       	cpc	r23, r19
 454:	84 07       	cpc	r24, r20
 456:	38 f0       	brcs	.+14     	; 0x466 <__stack+0x7>
 458:	9f 5f       	subi	r25, 0xFF	; 255
 45a:	5f 4f       	sbci	r21, 0xFF	; 255
 45c:	22 0f       	add	r18, r18
 45e:	33 1f       	adc	r19, r19
 460:	44 1f       	adc	r20, r20
 462:	aa 1f       	adc	r26, r26
 464:	a9 f3       	breq	.-22     	; 0x450 <__divsf3_pse+0x10>
 466:	35 d0       	rcall	.+106    	; 0x4d2 <__stack+0x73>
 468:	0e 2e       	mov	r0, r30
 46a:	3a f0       	brmi	.+14     	; 0x47a <__stack+0x1b>
 46c:	e0 e8       	ldi	r30, 0x80	; 128
 46e:	32 d0       	rcall	.+100    	; 0x4d4 <__stack+0x75>
 470:	91 50       	subi	r25, 0x01	; 1
 472:	50 40       	sbci	r21, 0x00	; 0
 474:	e6 95       	lsr	r30
 476:	00 1c       	adc	r0, r0
 478:	ca f7       	brpl	.-14     	; 0x46c <__stack+0xd>
 47a:	2b d0       	rcall	.+86     	; 0x4d2 <__stack+0x73>
 47c:	fe 2f       	mov	r31, r30
 47e:	29 d0       	rcall	.+82     	; 0x4d2 <__stack+0x73>
 480:	66 0f       	add	r22, r22
 482:	77 1f       	adc	r23, r23
 484:	88 1f       	adc	r24, r24
 486:	bb 1f       	adc	r27, r27
 488:	26 17       	cp	r18, r22
 48a:	37 07       	cpc	r19, r23
 48c:	48 07       	cpc	r20, r24
 48e:	ab 07       	cpc	r26, r27
 490:	b0 e8       	ldi	r27, 0x80	; 128
 492:	09 f0       	breq	.+2      	; 0x496 <__stack+0x37>
 494:	bb 0b       	sbc	r27, r27
 496:	80 2d       	mov	r24, r0
 498:	bf 01       	movw	r22, r30
 49a:	ff 27       	eor	r31, r31
 49c:	93 58       	subi	r25, 0x83	; 131
 49e:	5f 4f       	sbci	r21, 0xFF	; 255
 4a0:	3a f0       	brmi	.+14     	; 0x4b0 <__stack+0x51>
 4a2:	9e 3f       	cpi	r25, 0xFE	; 254
 4a4:	51 05       	cpc	r21, r1
 4a6:	78 f0       	brcs	.+30     	; 0x4c6 <__stack+0x67>
 4a8:	0c 94 e7 02 	jmp	0x5ce	; 0x5ce <__fp_inf>
 4ac:	0c 94 32 03 	jmp	0x664	; 0x664 <__fp_szero>
 4b0:	5f 3f       	cpi	r21, 0xFF	; 255
 4b2:	e4 f3       	brlt	.-8      	; 0x4ac <__stack+0x4d>
 4b4:	98 3e       	cpi	r25, 0xE8	; 232
 4b6:	d4 f3       	brlt	.-12     	; 0x4ac <__stack+0x4d>
 4b8:	86 95       	lsr	r24
 4ba:	77 95       	ror	r23
 4bc:	67 95       	ror	r22
 4be:	b7 95       	ror	r27
 4c0:	f7 95       	ror	r31
 4c2:	9f 5f       	subi	r25, 0xFF	; 255
 4c4:	c9 f7       	brne	.-14     	; 0x4b8 <__stack+0x59>
 4c6:	88 0f       	add	r24, r24
 4c8:	91 1d       	adc	r25, r1
 4ca:	96 95       	lsr	r25
 4cc:	87 95       	ror	r24
 4ce:	97 f9       	bld	r25, 7
 4d0:	08 95       	ret
 4d2:	e1 e0       	ldi	r30, 0x01	; 1
 4d4:	66 0f       	add	r22, r22
 4d6:	77 1f       	adc	r23, r23
 4d8:	88 1f       	adc	r24, r24
 4da:	bb 1f       	adc	r27, r27
 4dc:	62 17       	cp	r22, r18
 4de:	73 07       	cpc	r23, r19
 4e0:	84 07       	cpc	r24, r20
 4e2:	ba 07       	cpc	r27, r26
 4e4:	20 f0       	brcs	.+8      	; 0x4ee <__stack+0x8f>
 4e6:	62 1b       	sub	r22, r18
 4e8:	73 0b       	sbc	r23, r19
 4ea:	84 0b       	sbc	r24, r20
 4ec:	ba 0b       	sbc	r27, r26
 4ee:	ee 1f       	adc	r30, r30
 4f0:	88 f7       	brcc	.-30     	; 0x4d4 <__stack+0x75>
 4f2:	e0 95       	com	r30
 4f4:	08 95       	ret

000004f6 <__fixunssfsi>:
 4f6:	0e 94 17 03 	call	0x62e	; 0x62e <__fp_splitA>
 4fa:	88 f0       	brcs	.+34     	; 0x51e <__fixunssfsi+0x28>
 4fc:	9f 57       	subi	r25, 0x7F	; 127
 4fe:	98 f0       	brcs	.+38     	; 0x526 <__fixunssfsi+0x30>
 500:	b9 2f       	mov	r27, r25
 502:	99 27       	eor	r25, r25
 504:	b7 51       	subi	r27, 0x17	; 23
 506:	b0 f0       	brcs	.+44     	; 0x534 <__fixunssfsi+0x3e>
 508:	e1 f0       	breq	.+56     	; 0x542 <__fixunssfsi+0x4c>
 50a:	66 0f       	add	r22, r22
 50c:	77 1f       	adc	r23, r23
 50e:	88 1f       	adc	r24, r24
 510:	99 1f       	adc	r25, r25
 512:	1a f0       	brmi	.+6      	; 0x51a <__fixunssfsi+0x24>
 514:	ba 95       	dec	r27
 516:	c9 f7       	brne	.-14     	; 0x50a <__fixunssfsi+0x14>
 518:	14 c0       	rjmp	.+40     	; 0x542 <__fixunssfsi+0x4c>
 51a:	b1 30       	cpi	r27, 0x01	; 1
 51c:	91 f0       	breq	.+36     	; 0x542 <__fixunssfsi+0x4c>
 51e:	0e 94 31 03 	call	0x662	; 0x662 <__fp_zero>
 522:	b1 e0       	ldi	r27, 0x01	; 1
 524:	08 95       	ret
 526:	0c 94 31 03 	jmp	0x662	; 0x662 <__fp_zero>
 52a:	67 2f       	mov	r22, r23
 52c:	78 2f       	mov	r23, r24
 52e:	88 27       	eor	r24, r24
 530:	b8 5f       	subi	r27, 0xF8	; 248
 532:	39 f0       	breq	.+14     	; 0x542 <__fixunssfsi+0x4c>
 534:	b9 3f       	cpi	r27, 0xF9	; 249
 536:	cc f3       	brlt	.-14     	; 0x52a <__fixunssfsi+0x34>
 538:	86 95       	lsr	r24
 53a:	77 95       	ror	r23
 53c:	67 95       	ror	r22
 53e:	b3 95       	inc	r27
 540:	d9 f7       	brne	.-10     	; 0x538 <__fixunssfsi+0x42>
 542:	3e f4       	brtc	.+14     	; 0x552 <__fixunssfsi+0x5c>
 544:	90 95       	com	r25
 546:	80 95       	com	r24
 548:	70 95       	com	r23
 54a:	61 95       	neg	r22
 54c:	7f 4f       	sbci	r23, 0xFF	; 255
 54e:	8f 4f       	sbci	r24, 0xFF	; 255
 550:	9f 4f       	sbci	r25, 0xFF	; 255
 552:	08 95       	ret

00000554 <__floatunsisf>:
 554:	e8 94       	clt
 556:	09 c0       	rjmp	.+18     	; 0x56a <__floatsisf+0x12>

00000558 <__floatsisf>:
 558:	97 fb       	bst	r25, 7
 55a:	3e f4       	brtc	.+14     	; 0x56a <__floatsisf+0x12>
 55c:	90 95       	com	r25
 55e:	80 95       	com	r24
 560:	70 95       	com	r23
 562:	61 95       	neg	r22
 564:	7f 4f       	sbci	r23, 0xFF	; 255
 566:	8f 4f       	sbci	r24, 0xFF	; 255
 568:	9f 4f       	sbci	r25, 0xFF	; 255
 56a:	99 23       	and	r25, r25
 56c:	a9 f0       	breq	.+42     	; 0x598 <__floatsisf+0x40>
 56e:	f9 2f       	mov	r31, r25
 570:	96 e9       	ldi	r25, 0x96	; 150
 572:	bb 27       	eor	r27, r27
 574:	93 95       	inc	r25
 576:	f6 95       	lsr	r31
 578:	87 95       	ror	r24
 57a:	77 95       	ror	r23
 57c:	67 95       	ror	r22
 57e:	b7 95       	ror	r27
 580:	f1 11       	cpse	r31, r1
 582:	f8 cf       	rjmp	.-16     	; 0x574 <__floatsisf+0x1c>
 584:	fa f4       	brpl	.+62     	; 0x5c4 <__floatsisf+0x6c>
 586:	bb 0f       	add	r27, r27
 588:	11 f4       	brne	.+4      	; 0x58e <__floatsisf+0x36>
 58a:	60 ff       	sbrs	r22, 0
 58c:	1b c0       	rjmp	.+54     	; 0x5c4 <__floatsisf+0x6c>
 58e:	6f 5f       	subi	r22, 0xFF	; 255
 590:	7f 4f       	sbci	r23, 0xFF	; 255
 592:	8f 4f       	sbci	r24, 0xFF	; 255
 594:	9f 4f       	sbci	r25, 0xFF	; 255
 596:	16 c0       	rjmp	.+44     	; 0x5c4 <__floatsisf+0x6c>
 598:	88 23       	and	r24, r24
 59a:	11 f0       	breq	.+4      	; 0x5a0 <__floatsisf+0x48>
 59c:	96 e9       	ldi	r25, 0x96	; 150
 59e:	11 c0       	rjmp	.+34     	; 0x5c2 <__floatsisf+0x6a>
 5a0:	77 23       	and	r23, r23
 5a2:	21 f0       	breq	.+8      	; 0x5ac <__floatsisf+0x54>
 5a4:	9e e8       	ldi	r25, 0x8E	; 142
 5a6:	87 2f       	mov	r24, r23
 5a8:	76 2f       	mov	r23, r22
 5aa:	05 c0       	rjmp	.+10     	; 0x5b6 <__floatsisf+0x5e>
 5ac:	66 23       	and	r22, r22
 5ae:	71 f0       	breq	.+28     	; 0x5cc <__floatsisf+0x74>
 5b0:	96 e8       	ldi	r25, 0x86	; 134
 5b2:	86 2f       	mov	r24, r22
 5b4:	70 e0       	ldi	r23, 0x00	; 0
 5b6:	60 e0       	ldi	r22, 0x00	; 0
 5b8:	2a f0       	brmi	.+10     	; 0x5c4 <__floatsisf+0x6c>
 5ba:	9a 95       	dec	r25
 5bc:	66 0f       	add	r22, r22
 5be:	77 1f       	adc	r23, r23
 5c0:	88 1f       	adc	r24, r24
 5c2:	da f7       	brpl	.-10     	; 0x5ba <__floatsisf+0x62>
 5c4:	88 0f       	add	r24, r24
 5c6:	96 95       	lsr	r25
 5c8:	87 95       	ror	r24
 5ca:	97 f9       	bld	r25, 7
 5cc:	08 95       	ret

000005ce <__fp_inf>:
 5ce:	97 f9       	bld	r25, 7
 5d0:	9f 67       	ori	r25, 0x7F	; 127
 5d2:	80 e8       	ldi	r24, 0x80	; 128
 5d4:	70 e0       	ldi	r23, 0x00	; 0
 5d6:	60 e0       	ldi	r22, 0x00	; 0
 5d8:	08 95       	ret

000005da <__fp_nan>:
 5da:	9f ef       	ldi	r25, 0xFF	; 255
 5dc:	80 ec       	ldi	r24, 0xC0	; 192
 5de:	08 95       	ret

000005e0 <__fp_pscA>:
 5e0:	00 24       	eor	r0, r0
 5e2:	0a 94       	dec	r0
 5e4:	16 16       	cp	r1, r22
 5e6:	17 06       	cpc	r1, r23
 5e8:	18 06       	cpc	r1, r24
 5ea:	09 06       	cpc	r0, r25
 5ec:	08 95       	ret

000005ee <__fp_pscB>:
 5ee:	00 24       	eor	r0, r0
 5f0:	0a 94       	dec	r0
 5f2:	12 16       	cp	r1, r18
 5f4:	13 06       	cpc	r1, r19
 5f6:	14 06       	cpc	r1, r20
 5f8:	05 06       	cpc	r0, r21
 5fa:	08 95       	ret

000005fc <__fp_round>:
 5fc:	09 2e       	mov	r0, r25
 5fe:	03 94       	inc	r0
 600:	00 0c       	add	r0, r0
 602:	11 f4       	brne	.+4      	; 0x608 <__fp_round+0xc>
 604:	88 23       	and	r24, r24
 606:	52 f0       	brmi	.+20     	; 0x61c <__fp_round+0x20>
 608:	bb 0f       	add	r27, r27
 60a:	40 f4       	brcc	.+16     	; 0x61c <__fp_round+0x20>
 60c:	bf 2b       	or	r27, r31
 60e:	11 f4       	brne	.+4      	; 0x614 <__fp_round+0x18>
 610:	60 ff       	sbrs	r22, 0
 612:	04 c0       	rjmp	.+8      	; 0x61c <__fp_round+0x20>
 614:	6f 5f       	subi	r22, 0xFF	; 255
 616:	7f 4f       	sbci	r23, 0xFF	; 255
 618:	8f 4f       	sbci	r24, 0xFF	; 255
 61a:	9f 4f       	sbci	r25, 0xFF	; 255
 61c:	08 95       	ret

0000061e <__fp_split3>:
 61e:	57 fd       	sbrc	r21, 7
 620:	90 58       	subi	r25, 0x80	; 128
 622:	44 0f       	add	r20, r20
 624:	55 1f       	adc	r21, r21
 626:	59 f0       	breq	.+22     	; 0x63e <__fp_splitA+0x10>
 628:	5f 3f       	cpi	r21, 0xFF	; 255
 62a:	71 f0       	breq	.+28     	; 0x648 <__fp_splitA+0x1a>
 62c:	47 95       	ror	r20

0000062e <__fp_splitA>:
 62e:	88 0f       	add	r24, r24
 630:	97 fb       	bst	r25, 7
 632:	99 1f       	adc	r25, r25
 634:	61 f0       	breq	.+24     	; 0x64e <__fp_splitA+0x20>
 636:	9f 3f       	cpi	r25, 0xFF	; 255
 638:	79 f0       	breq	.+30     	; 0x658 <__fp_splitA+0x2a>
 63a:	87 95       	ror	r24
 63c:	08 95       	ret
 63e:	12 16       	cp	r1, r18
 640:	13 06       	cpc	r1, r19
 642:	14 06       	cpc	r1, r20
 644:	55 1f       	adc	r21, r21
 646:	f2 cf       	rjmp	.-28     	; 0x62c <__fp_split3+0xe>
 648:	46 95       	lsr	r20
 64a:	f1 df       	rcall	.-30     	; 0x62e <__fp_splitA>
 64c:	08 c0       	rjmp	.+16     	; 0x65e <__fp_splitA+0x30>
 64e:	16 16       	cp	r1, r22
 650:	17 06       	cpc	r1, r23
 652:	18 06       	cpc	r1, r24
 654:	99 1f       	adc	r25, r25
 656:	f1 cf       	rjmp	.-30     	; 0x63a <__fp_splitA+0xc>
 658:	86 95       	lsr	r24
 65a:	71 05       	cpc	r23, r1
 65c:	61 05       	cpc	r22, r1
 65e:	08 94       	sec
 660:	08 95       	ret

00000662 <__fp_zero>:
 662:	e8 94       	clt

00000664 <__fp_szero>:
 664:	bb 27       	eor	r27, r27
 666:	66 27       	eor	r22, r22
 668:	77 27       	eor	r23, r23
 66a:	cb 01       	movw	r24, r22
 66c:	97 f9       	bld	r25, 7
 66e:	08 95       	ret

00000670 <pow>:
 670:	fa 01       	movw	r30, r20
 672:	ee 0f       	add	r30, r30
 674:	ff 1f       	adc	r31, r31
 676:	30 96       	adiw	r30, 0x00	; 0
 678:	21 05       	cpc	r18, r1
 67a:	31 05       	cpc	r19, r1
 67c:	a1 f1       	breq	.+104    	; 0x6e6 <pow+0x76>
 67e:	61 15       	cp	r22, r1
 680:	71 05       	cpc	r23, r1
 682:	61 f4       	brne	.+24     	; 0x69c <pow+0x2c>
 684:	80 38       	cpi	r24, 0x80	; 128
 686:	bf e3       	ldi	r27, 0x3F	; 63
 688:	9b 07       	cpc	r25, r27
 68a:	49 f1       	breq	.+82     	; 0x6de <pow+0x6e>
 68c:	68 94       	set
 68e:	90 38       	cpi	r25, 0x80	; 128
 690:	81 05       	cpc	r24, r1
 692:	61 f0       	breq	.+24     	; 0x6ac <pow+0x3c>
 694:	80 38       	cpi	r24, 0x80	; 128
 696:	bf ef       	ldi	r27, 0xFF	; 255
 698:	9b 07       	cpc	r25, r27
 69a:	41 f0       	breq	.+16     	; 0x6ac <pow+0x3c>
 69c:	99 23       	and	r25, r25
 69e:	4a f5       	brpl	.+82     	; 0x6f2 <pow+0x82>
 6a0:	ff 3f       	cpi	r31, 0xFF	; 255
 6a2:	e1 05       	cpc	r30, r1
 6a4:	31 05       	cpc	r19, r1
 6a6:	21 05       	cpc	r18, r1
 6a8:	19 f1       	breq	.+70     	; 0x6f0 <pow+0x80>
 6aa:	e8 94       	clt
 6ac:	08 94       	sec
 6ae:	e7 95       	ror	r30
 6b0:	d9 01       	movw	r26, r18
 6b2:	aa 23       	and	r26, r26
 6b4:	29 f4       	brne	.+10     	; 0x6c0 <pow+0x50>
 6b6:	ab 2f       	mov	r26, r27
 6b8:	be 2f       	mov	r27, r30
 6ba:	f8 5f       	subi	r31, 0xF8	; 248
 6bc:	d0 f3       	brcs	.-12     	; 0x6b2 <pow+0x42>
 6be:	10 c0       	rjmp	.+32     	; 0x6e0 <pow+0x70>
 6c0:	ff 5f       	subi	r31, 0xFF	; 255
 6c2:	70 f4       	brcc	.+28     	; 0x6e0 <pow+0x70>
 6c4:	a6 95       	lsr	r26
 6c6:	e0 f7       	brcc	.-8      	; 0x6c0 <pow+0x50>
 6c8:	f7 39       	cpi	r31, 0x97	; 151
 6ca:	50 f0       	brcs	.+20     	; 0x6e0 <pow+0x70>
 6cc:	19 f0       	breq	.+6      	; 0x6d4 <pow+0x64>
 6ce:	ff 3a       	cpi	r31, 0xAF	; 175
 6d0:	38 f4       	brcc	.+14     	; 0x6e0 <pow+0x70>
 6d2:	9f 77       	andi	r25, 0x7F	; 127
 6d4:	9f 93       	push	r25
 6d6:	0d d0       	rcall	.+26     	; 0x6f2 <pow+0x82>
 6d8:	0f 90       	pop	r0
 6da:	07 fc       	sbrc	r0, 7
 6dc:	90 58       	subi	r25, 0x80	; 128
 6de:	08 95       	ret
 6e0:	46 f0       	brts	.+16     	; 0x6f2 <pow+0x82>
 6e2:	0c 94 ed 02 	jmp	0x5da	; 0x5da <__fp_nan>
 6e6:	60 e0       	ldi	r22, 0x00	; 0
 6e8:	70 e0       	ldi	r23, 0x00	; 0
 6ea:	80 e8       	ldi	r24, 0x80	; 128
 6ec:	9f e3       	ldi	r25, 0x3F	; 63
 6ee:	08 95       	ret
 6f0:	4f e7       	ldi	r20, 0x7F	; 127
 6f2:	9f 77       	andi	r25, 0x7F	; 127
 6f4:	5f 93       	push	r21
 6f6:	4f 93       	push	r20
 6f8:	3f 93       	push	r19
 6fa:	2f 93       	push	r18
 6fc:	0e 94 33 04 	call	0x866	; 0x866 <log>
 700:	2f 91       	pop	r18
 702:	3f 91       	pop	r19
 704:	4f 91       	pop	r20
 706:	5f 91       	pop	r21
 708:	0e 94 af 04 	call	0x95e	; 0x95e <__mulsf3>
 70c:	0c 94 90 03 	jmp	0x720	; 0x720 <exp>
 710:	29 f4       	brne	.+10     	; 0x71c <pow+0xac>
 712:	16 f0       	brts	.+4      	; 0x718 <pow+0xa8>
 714:	0c 94 e7 02 	jmp	0x5ce	; 0x5ce <__fp_inf>
 718:	0c 94 31 03 	jmp	0x662	; 0x662 <__fp_zero>
 71c:	0c 94 ed 02 	jmp	0x5da	; 0x5da <__fp_nan>

00000720 <exp>:
 720:	0e 94 17 03 	call	0x62e	; 0x62e <__fp_splitA>
 724:	a8 f3       	brcs	.-22     	; 0x710 <pow+0xa0>
 726:	96 38       	cpi	r25, 0x86	; 134
 728:	a0 f7       	brcc	.-24     	; 0x712 <pow+0xa2>
 72a:	07 f8       	bld	r0, 7
 72c:	0f 92       	push	r0
 72e:	e8 94       	clt
 730:	2b e3       	ldi	r18, 0x3B	; 59
 732:	3a ea       	ldi	r19, 0xAA	; 170
 734:	48 eb       	ldi	r20, 0xB8	; 184
 736:	5f e7       	ldi	r21, 0x7F	; 127
 738:	0e 94 c5 04 	call	0x98a	; 0x98a <__mulsf3_pse>
 73c:	0f 92       	push	r0
 73e:	0f 92       	push	r0
 740:	0f 92       	push	r0
 742:	4d b7       	in	r20, 0x3d	; 61
 744:	5e b7       	in	r21, 0x3e	; 62
 746:	0f 92       	push	r0
 748:	0e 94 7b 04 	call	0x8f6	; 0x8f6 <modf>
 74c:	e4 e5       	ldi	r30, 0x54	; 84
 74e:	f0 e0       	ldi	r31, 0x00	; 0
 750:	0e 94 c2 03 	call	0x784	; 0x784 <__fp_powser>
 754:	4f 91       	pop	r20
 756:	5f 91       	pop	r21
 758:	ef 91       	pop	r30
 75a:	ff 91       	pop	r31
 75c:	e5 95       	asr	r30
 75e:	ee 1f       	adc	r30, r30
 760:	ff 1f       	adc	r31, r31
 762:	49 f0       	breq	.+18     	; 0x776 <exp+0x56>
 764:	fe 57       	subi	r31, 0x7E	; 126
 766:	e0 68       	ori	r30, 0x80	; 128
 768:	44 27       	eor	r20, r20
 76a:	ee 0f       	add	r30, r30
 76c:	44 1f       	adc	r20, r20
 76e:	fa 95       	dec	r31
 770:	e1 f7       	brne	.-8      	; 0x76a <exp+0x4a>
 772:	41 95       	neg	r20
 774:	55 0b       	sbc	r21, r21
 776:	0e 94 f5 03 	call	0x7ea	; 0x7ea <ldexp>
 77a:	0f 90       	pop	r0
 77c:	07 fe       	sbrs	r0, 7
 77e:	0c 94 e9 03 	jmp	0x7d2	; 0x7d2 <inverse>
 782:	08 95       	ret

00000784 <__fp_powser>:
 784:	df 93       	push	r29
 786:	cf 93       	push	r28
 788:	1f 93       	push	r17
 78a:	0f 93       	push	r16
 78c:	ff 92       	push	r15
 78e:	ef 92       	push	r14
 790:	df 92       	push	r13
 792:	7b 01       	movw	r14, r22
 794:	8c 01       	movw	r16, r24
 796:	68 94       	set
 798:	06 c0       	rjmp	.+12     	; 0x7a6 <__fp_powser+0x22>
 79a:	da 2e       	mov	r13, r26
 79c:	ef 01       	movw	r28, r30
 79e:	0e 94 c2 04 	call	0x984	; 0x984 <__mulsf3x>
 7a2:	fe 01       	movw	r30, r28
 7a4:	e8 94       	clt
 7a6:	a5 91       	lpm	r26, Z+
 7a8:	25 91       	lpm	r18, Z+
 7aa:	35 91       	lpm	r19, Z+
 7ac:	45 91       	lpm	r20, Z+
 7ae:	55 91       	lpm	r21, Z+
 7b0:	a6 f3       	brts	.-24     	; 0x79a <__fp_powser+0x16>
 7b2:	ef 01       	movw	r28, r30
 7b4:	0e 94 b4 01 	call	0x368	; 0x368 <__addsf3x>
 7b8:	fe 01       	movw	r30, r28
 7ba:	97 01       	movw	r18, r14
 7bc:	a8 01       	movw	r20, r16
 7be:	da 94       	dec	r13
 7c0:	69 f7       	brne	.-38     	; 0x79c <__fp_powser+0x18>
 7c2:	df 90       	pop	r13
 7c4:	ef 90       	pop	r14
 7c6:	ff 90       	pop	r15
 7c8:	0f 91       	pop	r16
 7ca:	1f 91       	pop	r17
 7cc:	cf 91       	pop	r28
 7ce:	df 91       	pop	r29
 7d0:	08 95       	ret

000007d2 <inverse>:
 7d2:	9b 01       	movw	r18, r22
 7d4:	ac 01       	movw	r20, r24
 7d6:	60 e0       	ldi	r22, 0x00	; 0
 7d8:	70 e0       	ldi	r23, 0x00	; 0
 7da:	80 e8       	ldi	r24, 0x80	; 128
 7dc:	9f e3       	ldi	r25, 0x3F	; 63
 7de:	0c 94 09 02 	jmp	0x412	; 0x412 <__divsf3>
 7e2:	0c 94 e7 02 	jmp	0x5ce	; 0x5ce <__fp_inf>
 7e6:	0c 94 1c 05 	jmp	0xa38	; 0xa38 <__fp_mpack>

000007ea <ldexp>:
 7ea:	0e 94 17 03 	call	0x62e	; 0x62e <__fp_splitA>
 7ee:	d8 f3       	brcs	.-10     	; 0x7e6 <inverse+0x14>
 7f0:	99 23       	and	r25, r25
 7f2:	c9 f3       	breq	.-14     	; 0x7e6 <inverse+0x14>
 7f4:	94 0f       	add	r25, r20
 7f6:	51 1d       	adc	r21, r1
 7f8:	a3 f3       	brvs	.-24     	; 0x7e2 <inverse+0x10>
 7fa:	91 50       	subi	r25, 0x01	; 1
 7fc:	50 40       	sbci	r21, 0x00	; 0
 7fe:	94 f0       	brlt	.+36     	; 0x824 <ldexp+0x3a>
 800:	59 f0       	breq	.+22     	; 0x818 <ldexp+0x2e>
 802:	88 23       	and	r24, r24
 804:	32 f0       	brmi	.+12     	; 0x812 <ldexp+0x28>
 806:	66 0f       	add	r22, r22
 808:	77 1f       	adc	r23, r23
 80a:	88 1f       	adc	r24, r24
 80c:	91 50       	subi	r25, 0x01	; 1
 80e:	50 40       	sbci	r21, 0x00	; 0
 810:	c1 f7       	brne	.-16     	; 0x802 <ldexp+0x18>
 812:	9e 3f       	cpi	r25, 0xFE	; 254
 814:	51 05       	cpc	r21, r1
 816:	2c f7       	brge	.-54     	; 0x7e2 <inverse+0x10>
 818:	88 0f       	add	r24, r24
 81a:	91 1d       	adc	r25, r1
 81c:	96 95       	lsr	r25
 81e:	87 95       	ror	r24
 820:	97 f9       	bld	r25, 7
 822:	08 95       	ret
 824:	5f 3f       	cpi	r21, 0xFF	; 255
 826:	ac f0       	brlt	.+42     	; 0x852 <ldexp+0x68>
 828:	98 3e       	cpi	r25, 0xE8	; 232
 82a:	9c f0       	brlt	.+38     	; 0x852 <ldexp+0x68>
 82c:	bb 27       	eor	r27, r27
 82e:	86 95       	lsr	r24
 830:	77 95       	ror	r23
 832:	67 95       	ror	r22
 834:	b7 95       	ror	r27
 836:	08 f4       	brcc	.+2      	; 0x83a <ldexp+0x50>
 838:	b1 60       	ori	r27, 0x01	; 1
 83a:	93 95       	inc	r25
 83c:	c1 f7       	brne	.-16     	; 0x82e <ldexp+0x44>
 83e:	bb 0f       	add	r27, r27
 840:	58 f7       	brcc	.-42     	; 0x818 <ldexp+0x2e>
 842:	11 f4       	brne	.+4      	; 0x848 <ldexp+0x5e>
 844:	60 ff       	sbrs	r22, 0
 846:	e8 cf       	rjmp	.-48     	; 0x818 <ldexp+0x2e>
 848:	6f 5f       	subi	r22, 0xFF	; 255
 84a:	7f 4f       	sbci	r23, 0xFF	; 255
 84c:	8f 4f       	sbci	r24, 0xFF	; 255
 84e:	9f 4f       	sbci	r25, 0xFF	; 255
 850:	e3 cf       	rjmp	.-58     	; 0x818 <ldexp+0x2e>
 852:	0c 94 32 03 	jmp	0x664	; 0x664 <__fp_szero>
 856:	16 f0       	brts	.+4      	; 0x85c <ldexp+0x72>
 858:	0c 94 1c 05 	jmp	0xa38	; 0xa38 <__fp_mpack>
 85c:	0c 94 ed 02 	jmp	0x5da	; 0x5da <__fp_nan>
 860:	68 94       	set
 862:	0c 94 e7 02 	jmp	0x5ce	; 0x5ce <__fp_inf>

00000866 <log>:
 866:	0e 94 17 03 	call	0x62e	; 0x62e <__fp_splitA>
 86a:	a8 f3       	brcs	.-22     	; 0x856 <ldexp+0x6c>
 86c:	99 23       	and	r25, r25
 86e:	c1 f3       	breq	.-16     	; 0x860 <ldexp+0x76>
 870:	ae f3       	brts	.-22     	; 0x85c <ldexp+0x72>
 872:	df 93       	push	r29
 874:	cf 93       	push	r28
 876:	1f 93       	push	r17
 878:	0f 93       	push	r16
 87a:	ff 92       	push	r15
 87c:	c9 2f       	mov	r28, r25
 87e:	dd 27       	eor	r29, r29
 880:	88 23       	and	r24, r24
 882:	2a f0       	brmi	.+10     	; 0x88e <log+0x28>
 884:	21 97       	sbiw	r28, 0x01	; 1
 886:	66 0f       	add	r22, r22
 888:	77 1f       	adc	r23, r23
 88a:	88 1f       	adc	r24, r24
 88c:	da f7       	brpl	.-10     	; 0x884 <log+0x1e>
 88e:	20 e0       	ldi	r18, 0x00	; 0
 890:	30 e0       	ldi	r19, 0x00	; 0
 892:	40 e8       	ldi	r20, 0x80	; 128
 894:	5f eb       	ldi	r21, 0xBF	; 191
 896:	9f e3       	ldi	r25, 0x3F	; 63
 898:	88 39       	cpi	r24, 0x98	; 152
 89a:	20 f0       	brcs	.+8      	; 0x8a4 <log+0x3e>
 89c:	80 3e       	cpi	r24, 0xE0	; 224
 89e:	38 f0       	brcs	.+14     	; 0x8ae <log+0x48>
 8a0:	21 96       	adiw	r28, 0x01	; 1
 8a2:	8f 77       	andi	r24, 0x7F	; 127
 8a4:	0e 94 9d 01 	call	0x33a	; 0x33a <__addsf3>
 8a8:	ec e7       	ldi	r30, 0x7C	; 124
 8aa:	f0 e0       	ldi	r31, 0x00	; 0
 8ac:	04 c0       	rjmp	.+8      	; 0x8b6 <log+0x50>
 8ae:	0e 94 9d 01 	call	0x33a	; 0x33a <__addsf3>
 8b2:	e9 ea       	ldi	r30, 0xA9	; 169
 8b4:	f0 e0       	ldi	r31, 0x00	; 0
 8b6:	0e 94 c2 03 	call	0x784	; 0x784 <__fp_powser>
 8ba:	8b 01       	movw	r16, r22
 8bc:	be 01       	movw	r22, r28
 8be:	ec 01       	movw	r28, r24
 8c0:	fb 2e       	mov	r15, r27
 8c2:	6f 57       	subi	r22, 0x7F	; 127
 8c4:	71 09       	sbc	r23, r1
 8c6:	75 95       	asr	r23
 8c8:	77 1f       	adc	r23, r23
 8ca:	88 0b       	sbc	r24, r24
 8cc:	99 0b       	sbc	r25, r25
 8ce:	0e 94 ac 02 	call	0x558	; 0x558 <__floatsisf>
 8d2:	28 e1       	ldi	r18, 0x18	; 24
 8d4:	32 e7       	ldi	r19, 0x72	; 114
 8d6:	41 e3       	ldi	r20, 0x31	; 49
 8d8:	5f e3       	ldi	r21, 0x3F	; 63
 8da:	0e 94 c2 04 	call	0x984	; 0x984 <__mulsf3x>
 8de:	af 2d       	mov	r26, r15
 8e0:	98 01       	movw	r18, r16
 8e2:	ae 01       	movw	r20, r28
 8e4:	ff 90       	pop	r15
 8e6:	0f 91       	pop	r16
 8e8:	1f 91       	pop	r17
 8ea:	cf 91       	pop	r28
 8ec:	df 91       	pop	r29
 8ee:	0e 94 b4 01 	call	0x368	; 0x368 <__addsf3x>
 8f2:	0c 94 fe 02 	jmp	0x5fc	; 0x5fc <__fp_round>

000008f6 <modf>:
 8f6:	fa 01       	movw	r30, r20
 8f8:	dc 01       	movw	r26, r24
 8fa:	aa 0f       	add	r26, r26
 8fc:	bb 1f       	adc	r27, r27
 8fe:	9b 01       	movw	r18, r22
 900:	ac 01       	movw	r20, r24
 902:	bf 57       	subi	r27, 0x7F	; 127
 904:	28 f4       	brcc	.+10     	; 0x910 <modf+0x1a>
 906:	22 27       	eor	r18, r18
 908:	33 27       	eor	r19, r19
 90a:	44 27       	eor	r20, r20
 90c:	50 78       	andi	r21, 0x80	; 128
 90e:	20 c0       	rjmp	.+64     	; 0x950 <modf+0x5a>
 910:	b7 51       	subi	r27, 0x17	; 23
 912:	90 f4       	brcc	.+36     	; 0x938 <modf+0x42>
 914:	ab 2f       	mov	r26, r27
 916:	00 24       	eor	r0, r0
 918:	46 95       	lsr	r20
 91a:	37 95       	ror	r19
 91c:	27 95       	ror	r18
 91e:	01 1c       	adc	r0, r1
 920:	a3 95       	inc	r26
 922:	d2 f3       	brmi	.-12     	; 0x918 <modf+0x22>
 924:	00 20       	and	r0, r0
 926:	71 f0       	breq	.+28     	; 0x944 <modf+0x4e>
 928:	22 0f       	add	r18, r18
 92a:	33 1f       	adc	r19, r19
 92c:	44 1f       	adc	r20, r20
 92e:	b3 95       	inc	r27
 930:	da f3       	brmi	.-10     	; 0x928 <modf+0x32>
 932:	0e d0       	rcall	.+28     	; 0x950 <modf+0x5a>
 934:	0c 94 9c 01 	jmp	0x338	; 0x338 <__subsf3>
 938:	61 30       	cpi	r22, 0x01	; 1
 93a:	71 05       	cpc	r23, r1
 93c:	a0 e8       	ldi	r26, 0x80	; 128
 93e:	8a 07       	cpc	r24, r26
 940:	b9 46       	sbci	r27, 0x69	; 105
 942:	30 f4       	brcc	.+12     	; 0x950 <modf+0x5a>
 944:	9b 01       	movw	r18, r22
 946:	ac 01       	movw	r20, r24
 948:	66 27       	eor	r22, r22
 94a:	77 27       	eor	r23, r23
 94c:	88 27       	eor	r24, r24
 94e:	90 78       	andi	r25, 0x80	; 128
 950:	30 96       	adiw	r30, 0x00	; 0
 952:	21 f0       	breq	.+8      	; 0x95c <modf+0x66>
 954:	20 83       	st	Z, r18
 956:	31 83       	std	Z+1, r19	; 0x01
 958:	42 83       	std	Z+2, r20	; 0x02
 95a:	53 83       	std	Z+3, r21	; 0x03
 95c:	08 95       	ret

0000095e <__mulsf3>:
 95e:	0e 94 c2 04 	call	0x984	; 0x984 <__mulsf3x>
 962:	0c 94 fe 02 	jmp	0x5fc	; 0x5fc <__fp_round>
 966:	0e 94 f0 02 	call	0x5e0	; 0x5e0 <__fp_pscA>
 96a:	38 f0       	brcs	.+14     	; 0x97a <__mulsf3+0x1c>
 96c:	0e 94 f7 02 	call	0x5ee	; 0x5ee <__fp_pscB>
 970:	20 f0       	brcs	.+8      	; 0x97a <__mulsf3+0x1c>
 972:	95 23       	and	r25, r21
 974:	11 f0       	breq	.+4      	; 0x97a <__mulsf3+0x1c>
 976:	0c 94 e7 02 	jmp	0x5ce	; 0x5ce <__fp_inf>
 97a:	0c 94 ed 02 	jmp	0x5da	; 0x5da <__fp_nan>
 97e:	11 24       	eor	r1, r1
 980:	0c 94 32 03 	jmp	0x664	; 0x664 <__fp_szero>

00000984 <__mulsf3x>:
 984:	0e 94 0f 03 	call	0x61e	; 0x61e <__fp_split3>
 988:	70 f3       	brcs	.-36     	; 0x966 <__mulsf3+0x8>

0000098a <__mulsf3_pse>:
 98a:	95 9f       	mul	r25, r21
 98c:	c1 f3       	breq	.-16     	; 0x97e <__mulsf3+0x20>
 98e:	95 0f       	add	r25, r21
 990:	50 e0       	ldi	r21, 0x00	; 0
 992:	55 1f       	adc	r21, r21
 994:	62 9f       	mul	r22, r18
 996:	f0 01       	movw	r30, r0
 998:	72 9f       	mul	r23, r18
 99a:	bb 27       	eor	r27, r27
 99c:	f0 0d       	add	r31, r0
 99e:	b1 1d       	adc	r27, r1
 9a0:	63 9f       	mul	r22, r19
 9a2:	aa 27       	eor	r26, r26
 9a4:	f0 0d       	add	r31, r0
 9a6:	b1 1d       	adc	r27, r1
 9a8:	aa 1f       	adc	r26, r26
 9aa:	64 9f       	mul	r22, r20
 9ac:	66 27       	eor	r22, r22
 9ae:	b0 0d       	add	r27, r0
 9b0:	a1 1d       	adc	r26, r1
 9b2:	66 1f       	adc	r22, r22
 9b4:	82 9f       	mul	r24, r18
 9b6:	22 27       	eor	r18, r18
 9b8:	b0 0d       	add	r27, r0
 9ba:	a1 1d       	adc	r26, r1
 9bc:	62 1f       	adc	r22, r18
 9be:	73 9f       	mul	r23, r19
 9c0:	b0 0d       	add	r27, r0
 9c2:	a1 1d       	adc	r26, r1
 9c4:	62 1f       	adc	r22, r18
 9c6:	83 9f       	mul	r24, r19
 9c8:	a0 0d       	add	r26, r0
 9ca:	61 1d       	adc	r22, r1
 9cc:	22 1f       	adc	r18, r18
 9ce:	74 9f       	mul	r23, r20
 9d0:	33 27       	eor	r19, r19
 9d2:	a0 0d       	add	r26, r0
 9d4:	61 1d       	adc	r22, r1
 9d6:	23 1f       	adc	r18, r19
 9d8:	84 9f       	mul	r24, r20
 9da:	60 0d       	add	r22, r0
 9dc:	21 1d       	adc	r18, r1
 9de:	82 2f       	mov	r24, r18
 9e0:	76 2f       	mov	r23, r22
 9e2:	6a 2f       	mov	r22, r26
 9e4:	11 24       	eor	r1, r1
 9e6:	9f 57       	subi	r25, 0x7F	; 127
 9e8:	50 40       	sbci	r21, 0x00	; 0
 9ea:	9a f0       	brmi	.+38     	; 0xa12 <__mulsf3_pse+0x88>
 9ec:	f1 f0       	breq	.+60     	; 0xa2a <__mulsf3_pse+0xa0>
 9ee:	88 23       	and	r24, r24
 9f0:	4a f0       	brmi	.+18     	; 0xa04 <__mulsf3_pse+0x7a>
 9f2:	ee 0f       	add	r30, r30
 9f4:	ff 1f       	adc	r31, r31
 9f6:	bb 1f       	adc	r27, r27
 9f8:	66 1f       	adc	r22, r22
 9fa:	77 1f       	adc	r23, r23
 9fc:	88 1f       	adc	r24, r24
 9fe:	91 50       	subi	r25, 0x01	; 1
 a00:	50 40       	sbci	r21, 0x00	; 0
 a02:	a9 f7       	brne	.-22     	; 0x9ee <__mulsf3_pse+0x64>
 a04:	9e 3f       	cpi	r25, 0xFE	; 254
 a06:	51 05       	cpc	r21, r1
 a08:	80 f0       	brcs	.+32     	; 0xa2a <__mulsf3_pse+0xa0>
 a0a:	0c 94 e7 02 	jmp	0x5ce	; 0x5ce <__fp_inf>
 a0e:	0c 94 32 03 	jmp	0x664	; 0x664 <__fp_szero>
 a12:	5f 3f       	cpi	r21, 0xFF	; 255
 a14:	e4 f3       	brlt	.-8      	; 0xa0e <__mulsf3_pse+0x84>
 a16:	98 3e       	cpi	r25, 0xE8	; 232
 a18:	d4 f3       	brlt	.-12     	; 0xa0e <__mulsf3_pse+0x84>
 a1a:	86 95       	lsr	r24
 a1c:	77 95       	ror	r23
 a1e:	67 95       	ror	r22
 a20:	b7 95       	ror	r27
 a22:	f7 95       	ror	r31
 a24:	e7 95       	ror	r30
 a26:	9f 5f       	subi	r25, 0xFF	; 255
 a28:	c1 f7       	brne	.-16     	; 0xa1a <__mulsf3_pse+0x90>
 a2a:	fe 2b       	or	r31, r30
 a2c:	88 0f       	add	r24, r24
 a2e:	91 1d       	adc	r25, r1
 a30:	96 95       	lsr	r25
 a32:	87 95       	ror	r24
 a34:	97 f9       	bld	r25, 7
 a36:	08 95       	ret

00000a38 <__fp_mpack>:
 a38:	9f 3f       	cpi	r25, 0xFF	; 255
 a3a:	31 f0       	breq	.+12     	; 0xa48 <__fp_mpack_finite+0xc>

00000a3c <__fp_mpack_finite>:
 a3c:	91 50       	subi	r25, 0x01	; 1
 a3e:	20 f4       	brcc	.+8      	; 0xa48 <__fp_mpack_finite+0xc>
 a40:	87 95       	ror	r24
 a42:	77 95       	ror	r23
 a44:	67 95       	ror	r22
 a46:	b7 95       	ror	r27
 a48:	88 0f       	add	r24, r24
 a4a:	91 1d       	adc	r25, r1
 a4c:	96 95       	lsr	r25
 a4e:	87 95       	ror	r24
 a50:	97 f9       	bld	r25, 7
 a52:	08 95       	ret

00000a54 <_exit>:
 a54:	f8 94       	cli

00000a56 <__stop_program>:
 a56:	ff cf       	rjmp	.-2      	; 0xa56 <__stop_program>
